{
    "$id": "https://github.com/ajayitem/digital-datasheets/blob/tooling_proposed_changes_2/part-spec/power/battery_charger.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "battery charger",
    "type": "object",
    "required": [
        "batteryChargeCurrent"
    ],
    "properties": {
        "chargerType": {
            "description": "battery charger type",
            "examples": [
                "linear",
                "switching", 
                "direct"
            ],
            "type": "string"
        },
        "converterType": {
            "description": "switching charger type",
            "examples": [
                "buck",
                "boost",
                "buck-boost"
            ],
            "type": "string"
        },
        "chargerTopology": {
            "description": "type of battery charger topology (Narrow VDC vs Hybrid Power Boost)",
            "enum": [
                "nvdc",
                "hpb"
            ],
            "type": "string"
        },
        "batteryConfig": {
            "description": "battery configuration supported by the device",
            "examples": [
                "1S",
                "2S2P",
                "3S",
                "4S",
                "4S2P"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "batteryCellChemistry": {
            "description": "battery cell chemistry supported by the device",
            "examples": [
                "Li-Ion",
                "LiPo"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "inputPowerSource": {
            "description": "input power source supported by the device",
            "examples": [
                "adapter",
                "usb pd",
                "usb 5V"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "inputCurrentAccuracy": {
            "description": "accuracy of input current when set",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "batteryChargeCurrent": {
            "description": "charging current of a device",
            "comment": "units of amps",
            "$ref": "../common/unit.json"
        },
        "batteryChargeCurrentAccuracy": {
            "description": "charging current regulation accuracy of a device",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "batteryPreChargeCurrent": {
            "description": "charging current of a device in pre-charge phase",
            "comment": "units of amps",
            "$ref": "../common/unit.json"
        },
        "batteryPreChargeCurrentAccuracy": {
            "description": "pre-charging current regulation accuracy of a device",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "batteryTrickleChargeCurrent": {
            "description": "charging current of a device in trickle charge phase",
            "comment": "units of amps",
            "$ref": "../common/unit.json"
        },
        "batteryTrickleChargeCurrentAccuracy": {
            "description": "Trickle charging current regulation accuracy of a device",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "batteryTerminationChargeCurrent": {
            "description": "charging current of a device in charge termination phase",
            "comment": "units of amps",
            "$ref": "../common/unit.json"
        },
        "batteryTerminationChargeCurrentAccuracy": {
            "description": "termination charging current regulation accuracy of a device",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "batteryChargeVoltage": {
            "description": "battery charge voltage regulated by a device",
            "comment": "units of volts",
            "$ref": "../common/unit.json"
        },
        "batteryChargeVoltageAccuracy": {
            "description": "accuracy of battery charge voltage regulated by a device",
            "comment": "units of %",
            "$ref": "../common/unit.json"
        },
        "efficiency": {
            "description": "charge efficiency vs charge current of a device",
            "$ref": "../common/graph.json"
        },
        "vin": {
            "description": "input voltage under which a device can be expected to reliabily operate",
            "comment": "units of volts",
            "$ref": "../common/unit.json"
        },
        "fsw": {
            "description": "switching frequency of a device",
            "comment": "units of hertz",
            "$ref": "../common/unit.json"
        },
        "currentConsumption": {
            "description": "current consumption of a device",
            "$ref": "../common/currentConsumption.json"
        },
        "componentProtectionThresholds": {
            "description": "Thermal and power supply protection thresholds of a device",
            "$ref": "../common/componentProtectionThresholds.json"
        },
        "batteryChargerProtections": {
            "description": "battery charger specific protections supported by device",
            "examples": [
                "adapterOvervoltageProtection",
                "batteryProtection",
                "systemVoltageRailShortProtection"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "integratedLoadSwitch": {
            "description": "whether the device contains integrated power path load switch(es)",
            "type": "boolean"
        },
        "integratedFets": {
            "description": "whether the device contains integrated switching mosfets",
            "type": "boolean"
        },
        "integratedFetProperties": {
            "description": "describes integrated fet current limits and rdson properties",
            "$ref": "../common/powerFetProperties.json"
        },
        "gateCapacitance": {
            "description": "describes gate capacitance supported on external fets",
            "comment": "units of farads",
            "$ref": "../common/unit.json"
        },
        "inputSenseResistor": {
            "description": "describes intput sense resistor value",
            "comment": "units of ohms",
            "$ref": "../common/unit.json"
        },
        "batterySenseResistor": {
            "description": "describes battery sense resistor value",
            "comment": "units of ohms",
            "$ref": "../common/unit.json"
        },
        "passThroughMode": {
            "description": "whether pass through mode is supported",
            "type": "boolean"
        },
        "bc12Support": {
            "description": "whether bc 1.2 detection is built in",
            "type": "boolean"
        },
        "tcpcSupport": {
            "description": "whether type-C port controller support is built in",
            "type": "boolean"
        },
        "usbTypecRevision": {
            "description": "usb type-c spec revision supported by a device",
            "examples": [
                "1.2",
                "1.3"
            ],
            "type": "string"
        },
        "pdVersion": {
            "description": "version of power delivery spec supported by a device",
            "examples": [
                "pd2.0",
                "pd3.1"
            ],
            "type": "string"
        },
        "pins": {
			"description": "array of pin objects with associated properties",
			"type": "array",
			"items": {
				"$ref": "../common/pinSpec.json#/pinSpec"
			}
		},
		"package": {
			"description": "component package information",
			"$ref": "../common/package.json#/package"
		},
		"externalFileMap": {
			"description": "external files that describe key component properties. External files can be used in lieu of defining core properties, pins, and package informatoin in the same file",
			"$ref": "#/$defs/externalFileMap"
		},
        "componentID": {
			"description": "methods for identifying the version of the digital datasheet",
			"$ref": "../common/componentID.json"
		}
    },
	"$defs": {
		"externalFileMap": {
			"type": "object",
			"properties": {
				"coreProperties": {
					"description": "core component properties as defined by the specific component spec file. These properties are described by the common part of the part number",
					"example": "this might include everything about an MCU other than flash size",
					"$ref": "../common/externalFile.json"
				},
				"additionalCoreProperities": {
					"description": "core component properties as defined by the specific component spec file. These properties are described by the changing part of the part number",
					"example": "this might include the MCU flash size",
					"$ref": "../common/externalFile.json"
				},
				"pins": {
					"description": "pin properties specified by the pin spec file",
					"$ref": "../common/externalFile.json"
				},
				"package": {
					"description": "package information specified by the package spec file",
					"$ref": "../common/externalFile.json"
				}
			}
		}
	}
}
