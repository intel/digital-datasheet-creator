{
    "$id": "https://github.com/ajayitem/digital-datasheets/blob/tooling_proposed_changes_2/part-spec/passives/inductor.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "inductor",
    "type": "object",
    "required": [
      "value"
    ],
    "properties": {
      "value": {
        "description": "inductor value",
        "comment": "units of henry",
        "$ref": "../common/unit.json"
      },
      "tolerance": {
        "description": "nominal tolerance of an inductor", 
        "comment": "units of %",
        "$ref": "../common/unit.json"
      },
      "ratedCurrent": {
        "description": "maximum continuous current the inductor can handle",
        "comment": "units of amps",
        "$ref": "../common/unit.json"
      },
      "saturationCurrent": {
        "description": "current where the inductor enters the magnetic state, and the inductance drops a specified amount",
        "comment": "units of amps",
        "$ref": "../common/unit.json"
      },
      "rmsCurrent": {
        "description": "DC current that produces an inductor temperature rise of 40 degrees Celsius",
        "comment": "units of amps",
        "$ref": "../common/unit.json"
      },
      "selfResonantFrequency": {
        "description": "frequency at which the inductor becomes a capacitor",
        "comment": "units of hertz",
        "$ref": "../common/unit.json"
      },
      "dcResistance": {
        "description": "DC resistance of the inductor",
        "comment": "units of ohms",
        "$ref": "../common/unit.json"
      },
      "temperatureCoefficient": {
        "description": "change in inductance when the temperature is changed",
        "comment": "units of henry/degree (Celsius or Kelvin)",
        "type": "number"
      },
      "minTemperature": {
        "description": "minimum temperature under which a inductor can be expected to reliably operate",
        "comment": "units of degrees (Celsius or Kelvin)",
        "$ref": "../common/unit.json"
      },
      "maxTemperature": {
        "description": "maximum temperature under which a inductor can be expected to reliably operate",
        "comment": "units of degrees (Celsius or Kelvin)",
        "$ref": "../common/unit.json"
      },
      "saturationCurve": {
        "description": "graph object to capture inductor saturation with current",
        "$ref": "../common/graph.json"
      },
      "resonantFrequencyCurve": {
        "description": "graph object to capture inductor resonant frequency",
        "$ref": "../common/graph.json"
      },
          "pins": {
              "description": "array of pin objects with associated properties",
              "type": "array",
              "items": {
                  "$ref": "../common/pinSpec.json#/pinSpec"
              }
          },
          "package": {
              "description": "component package information",
              "$ref": "../common/package.json#/package"
          },
          "externalFileMap": {
              "description": "external files that describe key component properties. External files can be used in lieu of defining core properties, pins, and package informatoin in the same file",
              "$ref": "#/$defs/externalFileMap"
          },
          "componentID": {
              "description": "methods for identifying the version of the digital datasheet",
              "$ref": "../common/componentID.json"
          }
    },
      "$defs": {
          "externalFileMap": {
              "type": "object",
              "properties": {
                  "coreProperties": {
                      "description": "core component properties as definied by the specific component spec file. These properties are described by the common part of the part number",
                      "example": "this might include everything about an MCU other than flash size",
                      "$ref": "../common/externalFile.json"
                  },
                  "additionalCoreProperties": {
                      "description": "core component properties as definied by the specific component spec file. These properties are described by the changing part of the part number",
                      "example": "this might include the MCU flash size",
                      "$ref": "../common/externalFile.json"
                  },
                  "pins": {
                      "description": "pin properties specified by the pin spec file",
                      "$ref": "../common/externalFile.json"
                  },
                  "package": {
                      "description": "package information specified by the package spec file",
                      "$ref": "../common/externalFile.json"
                  }
              }
          }
      }
  }
  